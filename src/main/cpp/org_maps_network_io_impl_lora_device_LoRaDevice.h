/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_maps_network_io_impl_lora_device_LoRaDevice */

#ifndef _Included_org_maps_network_io_impl_lora_device_LoRaDevice
#define _Included_org_maps_network_io_impl_lora_device_LoRaDevice
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_maps_network_io_impl_lora_device_LoRaDevice
 * Method:    init
 * Signature: (IFIII)I
 */
JNIEXPORT jint JNICALL Java_org_maps_network_io_impl_lora_device_LoRaDevice_init
  (JNIEnv *, jobject, jint, jfloat, jint, jint, jint);

/*
 * Class:     org_maps_network_io_impl_lora_device_LoRaDevice
 * Method:    setPower
 * Signature: (IIZ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_maps_network_io_impl_lora_device_LoRaDevice_setPower
  (JNIEnv *, jobject, jint, jint, jboolean);

/*
 * Class:     org_maps_network_io_impl_lora_device_LoRaDevice
 * Method:    setCADTimeout
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_org_maps_network_io_impl_lora_device_LoRaDevice_setCADTimeout
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     org_maps_network_io_impl_lora_device_LoRaDevice
 * Method:    write
 * Signature: (I[BIBB)Z
 */
JNIEXPORT jboolean JNICALL Java_org_maps_network_io_impl_lora_device_LoRaDevice_write
  (JNIEnv *, jobject, jint, jbyteArray, jint, jbyte, jbyte);

/*
 * Class:     org_maps_network_io_impl_lora_device_LoRaDevice
 * Method:    read
 * Signature: (I[BI)J
 */
JNIEXPORT jlong JNICALL Java_org_maps_network_io_impl_lora_device_LoRaDevice_read
  (JNIEnv *, jobject, jint, jbyteArray, jint);

/*
 * Class:     org_maps_network_io_impl_lora_device_LoRaDevice
 * Method:    available
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_maps_network_io_impl_lora_device_LoRaDevice_available
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_maps_network_io_impl_lora_device_LoRaDevice
 * Method:    setPromiscuous
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_org_maps_network_io_impl_lora_device_LoRaDevice_setPromiscuous
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     org_maps_network_io_impl_lora_device_LoRaDevice
 * Method:    getPacketSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_maps_network_io_impl_lora_device_LoRaDevice_getPacketSize
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
