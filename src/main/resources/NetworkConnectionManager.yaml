#
#   Copyright [ 2020 - 2023 ] [Matthew Buckton]
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

---
NetworkConnectionManager:
    global:
        selector_pool_size: 1

        # ---------------------------------------------------------------------------------------------------------
        # tcp layer configuration
        # ---------------------------------------------------------------------------------------------------------
        receiveBufferSize: 128000
        sendBufferSize: 128000
        timeout: 60000

        readDelayOnFragmentation: 100
        enableReadDelayOnFragmentation: true

        # ---------------------------------------------------------------------------------------------------------
        # Generic protocol configuration
        # ---------------------------------------------------------------------------------------------------------
        serverReadBufferSize:  1M
        serverWriteBufferSize: 1M
        selectorThreadCount  : 5

        # ---------------------------------------------------------------------------------------------------------
        # SSL Configuration
        # ---------------------------------------------------------------------------------------------------------
        ssl_keyStoreFile: my-keystore.jks
        ssl_keyStorePassphrase: password
        ssl_trustStoreFile: my-keystore.jks
        ssl_trustStorePassphrase: password
        ssl_keyManagerFactory: SunX509
        ssl_trustManagerFactory: SunX509
        ssl_SSLContext: TLS
        ssl_keyStore: JKS
        ssl_trustStore: JKS

    data:
      - name: messaging_server
        url: tcp://10.140.62.244:1883/
        sessionId: matts-pc-pull2
        protocol: mqtt
        username: matthew
        password: doesntmatter
        links:
          - direction: pull
            remote_namespace: /device/sensor/i2c/1/0x76/SEN0466/data
            local_namespace: /temperature
            transformer:
              name: JsonToValue
              key: temperature

      - name: messaging_server
        url: tcp://10.140.62.243:1883/
        sessionId: matts-pc-pull
        protocol: mqtt
        username: matthew
        password: doesntmatter
        links:
          - direction: pull
            remote_namespace: /device/clock/i2c/1/0x68/DS3231/data
            local_namespace: /clock
            transformer:
              name: JsonToValue
              key: Date


#        name: Generic name for the connection
#        url: tcp|ssl|ws|wss://<hostname>:<port>/ This is optional, if left out it is assumed a local connection
#        protocol: mqtt(4|5)|stomp|amqp           Only required it URL is supplied
#        username: username to use
#        password: password to use
#        sessionId: Unique session identifier to use
#
#        The remote key is optional, and if present then username, password and sessionId are expected
#        This enables remote connections to use different auth than local.
#        If not present will use the standard supplied values
#        remote:
#              username: remote username to be used
#              password: remote password
#              sessionId: remote session if
#
#
#       links:
#          -
#            direction: pull|push
#            remote_namespace: Destination name on the remote server
#            local_namespace: Destination name on the local server
