#
#   Copyright [ 2020 - 2021 ] [Matthew Buckton]
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

---
NetworkConnectionManager:
    global:
        selector_pool_size: 10

        # ---------------------------------------------------------------------------------------------------------
        # tcp layer configuration
        # ---------------------------------------------------------------------------------------------------------
        receiveBufferSize: 128000
        sendBufferSize: 128000
        timeout: 60000

        readDelayOnFragmentation: 100
        enableReadDelayOnFragmentation: true

        # ---------------------------------------------------------------------------------------------------------
        # Generic protocol configuration
        # ---------------------------------------------------------------------------------------------------------
        serverReadBufferSize:  1M
        serverWriteBufferSize: 1M
        selectorThreadCount  : 5

        # ---------------------------------------------------------------------------------------------------------
        # SSL Configuration
        # ---------------------------------------------------------------------------------------------------------
        ssl_keyStoreFile: my-keystore.jks
        ssl_keyStorePassphrase: password
        ssl_trustStoreFile: my-keystore.jks
        ssl_trustStorePassphrase: password
        ssl_keyManagerFactory: SunX509
        ssl_trustManagerFactory: SunX509
        ssl_SSLContext: TLS
        ssl_keyStore: JKS
        ssl_trustStore: JKS

    data:
      -
          name: Connects to the local server over SSL and using the STOMP protocol
          url: ssl://localhost:8883/
          protocol: stomp
          username: user1
          password: password1
          sessionId: StompSSLSessionLocal
          links:
            -
                direction: push
                remote_namespace: /output
                local_namespace: /input


      -
          name: Local destination connection, connects /localInput to /output without the need for a network connection
          username: user1
          password: password1
          sessionId: UniqueSessionId
          links:
              -
                  direction: push
                  remote_namespace: /output
                  local_namespace: /localInput

#        name: Generic name for the connection
#        url: tcp|ssl|ws|wss://<hostname>:<port>/ This is optional, if left out it is assumed a local connection
#        protocol: mqtt(4|5)|stomp|amqp           Only required it URL is supplied
#        username: username to use
#        password: password to use
#        sessionId: Unique session identifier to use
#
#        The remote key is optional, and if present then username, password and sessionId are expected
#        This enables remote connections to use different auth than local.
#        If not present will use the standard supplied values
#        remote:
#              username: remote username to be used
#              password: remote password
#              sessionId: remote session if
#
#
#       links:
#          -
#            direction: pull|push
#            remote_namespace: Destination name on the remote server
#            local_namespace: Destination name on the local server
