#
#   Copyright [ 2020 - 2023 ] [Matthew Buckton]
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

---
NetworkManager:
    global:

      # ---------------------------------------------------------------------------------------------------------
      # tcp layer configuration
      # ---------------------------------------------------------------------------------------------------------
      receiveBufferSize: 128000
      sendBufferSize: 128000
      timeout: 60000
      backlog: 100
      soLingerDelaySec: 10
      readDelayOnFragmentation: 100
      fragmentationLimit: 5
      enableReadDelayOnFragmentation: true

      # ---------------------------------------------------------------------------------------------------------
      # Generic protocol configuration
      # ---------------------------------------------------------------------------------------------------------
      serverReadBufferSize: 10K
      serverWriteBufferSize: 10K
      selectorThreadCount: 2

      # ---------------------------------------------------------------------------------------------------------
      # MQTT Protocol configuration
      # ---------------------------------------------------------------------------------------------------------
      maximumSessionExpiry: 86400
      maximumBufferSize: 10M
      serverReceiveMaximum: 10
      clientReceiveMaximum: 65535
      clientMaximumTopicAlias: 32767
      serverMaximumTopicAlias: 0
      strictClientId: false

      # ---------------------------------------------------------------------------------------------------------
      # MQTT 5.0 specific
      # ---------------------------------------------------------------------------------------------------------
      minServerKeepAlive: 0
      maxServerKeepAlive: 60

      # ---------------------------------------------------------------------------------------------------------
      # LoRa Gateway specific
      # ---------------------------------------------------------------------------------------------------------
      # Maximum Packets per second limit to ensure the radio isn't flooded
      LoRaMaxTransmissionRate: 20

      # ---------------------------------------------------------------------------------------------------------
      # MQTT-SN specific configuration
      # ---------------------------------------------------------------------------------------------------------
      maxInFlightEvents: 1
      dropQoS0Events: true
      eventQueueTimeout: 0
      advertiseGateway: false
      enablePortChanges: true
      enableAddressChanges: true
      packetReuseTimeout: 1000

      # ---------------------------------------------------------------------------------------------------------
      # Global configuration
      # ---------------------------------------------------------------------------------------------------------
      discoverable: true             # If the server registers a mdns entry for the adapter
      preferIPv6Addresses: true      # If the server should prefer IPv6 addresses over IPv4 addresses
      scanNetworkChanges: false      # If true, the server will scan for new interfaces or disconnected interfaces
      scanInterval: 60000            # Time in milliseconds to scan for network changes

        # ---------------------------------------------------------------------------------------------------------
        # Global configuration for SSL
        # ---------------------------------------------------------------------------------------------------------
      security:
        tls:
          clientCertificateRequired: false
          clientCertificateWanted: false
            #-----------------------------------
            # CRL Specific
            # crlUrl: <URL TO CRL>
            # crlInterval: <time in seconds to reload CRL>
            #-----------------------------------

          keyStore:
            type: JKS
            managerFactory: SunX509
            path: my-keystore.jks
            passphrase: password

          trustStore:
            type: JKS
            path: my-truststore.jks
            passphrase: password
            managerFactory: SunX509

        dtls:
          clientCertificateRequired: false

          keyStore:
            #alias: server  # Optional
            type: JKS # | "PKCS11", "JKS", "PKCS12", "JCEKS", "BKS", "UBER"
            # providerName: SunJSSE  # Typically not required for standard keystores
            managerFactory: SunX509
            # Standard Key Store parameters
            path: my-keystore.jks
            passphrase: password

            # PKCS11 specific settings
            # provider: SunPKCS11
            # config: pkcs11-config.cfg

          trustStore:
            type: JKS # | "PKCS11", "JKS", "PKCS12", "JCEKS", "BKS", "UBER"
            # providerName: SunJSSE  # Typically not required for standard truststores
            # Standard Key Store parameters
            path: my-truststore.jks
            passphrase: password
            managerFactory: SunX509
            # PKCS11 specific settings
            # provider: SunPKCS11
            # configPath: pkcs11-config.cfg


    data:

      - name: "AMQP Interface"
        url: tcp://:::5672/
        protocol: amqp
        sasl:
          mechanism: "SCRAM-SHA-512"
          identityProvider: system
        map: "/{{virtualHostName}}"
        virtualHost:
          - name: "hosta"
            auth: anon
            map: "/amqp/hosta/"

          - name: "hostb"
            auth: usernamePassword



      - name: "AMQPs Interface"
        url: ssl://:::5671/
        protocol: amqp
        auth: default
        map: "/{{virtualHostName}}"
        virtualHost:
          - name: "hosta"
            auth: anon
            map: "/amqp/hosta/"

          - name: "hostb"
            auth: usernamePassword

      - name: "TCP MQTT Interface"
        url: tcp://:::1883/
        protocol: mqtt
        auth: usernamePassword

      - name: "SSL MQTT Interface"
        url: ssl://:::1884/
        protocol: mqtt
        auth: usernamePassword

      - name: "Stomp Interface"
        url: tcp://:::61613/
        protocol: stomp
        auth: usernamePassword

      - name: "SSL Stomp Interface"
        url: ssl://:::61614/
        protocol: stomp
        auth: usernamePassword

      - name: "Test Serial"
        url: "serial://"
        port: com7
        protocol: nmea
        baudRate: 9600
        stopBit: 1
        parity: n
        readTimeOut: 60000
        writeTimeOut: 60000
        flowControl: 0

      - name: "LoRa device configuration"
        url: lora://loraDevice0:2/
        protocol: mqtt-sn
        auth: anon
        selectorThreadCount: 1
        registered: "*,2,/sensors/tank2:*,12,/sensors/weather/indoor:*,11,/sensors/weather/outdoor:*,8,/sensors/water/garden:*,9,/sensors/water/house"
