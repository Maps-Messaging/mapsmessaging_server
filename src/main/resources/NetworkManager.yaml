#
#   Copyright [ 2020 - 2023 ] [Matthew Buckton]
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

---
NetworkManager:
    global:
        # ---------------------------------------------------------------------------------------------------------
        # Global configuration for SSL
        # ---------------------------------------------------------------------------------------------------------

        ssl_keyStoreFile: my-keystore.jks
        ssl_keyStorePassphrase: password
        ssl_trustStoreFile: my-keystore.jks
        ssl_trustStorePassphrase: password
        ssl_keyManagerFactory: SunX509
        ssl_trustManagerFactory: SunX509
        ssl_SSLContext: TLS
        ssl_keyStore: JKS
        ssl_trustStore: JKS

      # ---------------------------------------------------------------------------------------------------------
      # tcp layer configuration
      # ---------------------------------------------------------------------------------------------------------
        receiveBufferSize: 128000
        sendBufferSize: 128000
        timeout: 60000
        backlog: 100
        soLingerDelaySec: 10
        readDelayOnFragmentation: 100
        enableReadDelayOnFragmentation: true

      # ---------------------------------------------------------------------------------------------------------
      # Generic protocol configuration
      # ---------------------------------------------------------------------------------------------------------
        serverReadBufferSize :  10K
        serverWriteBufferSize : 10K
        selectorThreadCount: 2

      # ---------------------------------------------------------------------------------------------------------
      # MQTT Protocol configuration
      # ---------------------------------------------------------------------------------------------------------
        maximumSessionExpiry : 86400
        maximumBufferSize: 10M
        serverReceiveMaximum : 10
        clientReceiveMaximum : 65535
        clientMaximumTopicAlias : 32767
        serverMaximumTopicAlias : 0
        strictClientId : false

      # ---------------------------------------------------------------------------------------------------------
      # MQTT 5.0 specific
      # ---------------------------------------------------------------------------------------------------------
        minServerKeepAlive : 0
        maxServerKeepAlive : 60

      # ---------------------------------------------------------------------------------------------------------
      # LoRa Gateway specific
      # ---------------------------------------------------------------------------------------------------------
      # Maximum Packets per second limit to ensure the radio isn't flooded
        LoRaMaxTransmissionRate : 20

      # ---------------------------------------------------------------------------------------------------------
      # MQTT-SN specific configuration
      # ---------------------------------------------------------------------------------------------------------
        maxInFlightEvents : 1
        dropQoS0Events: true
        eventQueueTimeout: 0
        advertiseGateway: false
        enablePortChanges: true
        enableAddressChanges: true
        packetReuseTimeout: 1000

      # ---------------------------------------------------------------------------------------------------------
      # Global configuration
      # ---------------------------------------------------------------------------------------------------------
        discoverable: true             # If the server registers a mdns entry for the adapter
        preferIPv6Addresses: true      # If the server should prefer IPv6 addresses over IPv4 addresses
        scanNetworkChanges: false      # If true, the server will scan for new interfaces or disconnected interfaces
        scanInterval: 60000            # Time in milliseconds to scan for network changes

    data:

      - name: "AMQP Interface"
        url: tcp://:::5672/
        protocol: amqp
        auth: usernamePassword

      - name: "AMQPs Interface"
        url: ssl://:::5671/
        protocol: amqp
        auth: usernamePassword

      - name: "MQTT Interface"
        url: tcp://:::1883/
        protocol: mqtt
        auth: usernamePassword

      - name: "Stomp Interface"
        url: tcp://:::61613/
        protocol: stomp
        auth: usernamePassword

      - name: "Stomp Interface"
        url: ssl://:::61614/
        protocol: stomp
        auth: usernamePassword

      - url: udp://:::1883/
        name: "MQTT-SN Interface"
        protocol: mqtt-sn
        eventsPerTopicDuringSleep: 5
        maxTopicsInSleep: 10
        advertiseGateway: true
        sasl:
          mechanism: SCRAM-SHA-512
          identityProvider: htpassword
          passwordFile: ./.security/htpassword

      - url: dtls://:::8883/
        name: "MQTT-SN Interface"
        protocol: mqtt-sn
        eventsPerTopicDuringSleep: 5
        maxTopicsInSleep: 10
        advertiseGateway: true
        sasl:
          mechanism: SCRAM-SHA-512
          identityProvider: htpassword
          passwordFile: ./.security/htpassword

      - url: udp://:::5683/
        name: "CoAP Interface"
        protocol: coap
        maxBlockSize: 512
        idleTimePeriod: 120

      - url: dtls://:::5684/
        name: "CoAP Interface"
        protocol: coap
        maxBlockSize: 512
        idleTimePeriod: 120

      - url: udp://:::1700/
        name: "SemTech Gateway"
        protocol: semtech
        inbound: /semtech/{gatewayId}/in
        status: /semtech/{gatewayId}/status
        outbound: /semtech/{gatewayId}/out
